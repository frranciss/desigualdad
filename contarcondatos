library(shiny)
library(shinydashboard)
library(tidyverse)
library(readxl)
library(ggplot2)
library(dplyr)
library(leaflet)
library(shinyjs)
library(gganimate)
library(sf)
library(rsconnect)

datos <- read_xlsx("C:/Users/adria/OneDrive/Documentos/udesa/Tabla.xlsx")

paises <- unique(datos$Pais)
variables_x <- setdiff(names(datos), c("Pais", "Año", "Brecha"))

coordenadas_paises <- data.frame(
  paises = c("Argentina", "Brasil", "Chile", "Colombia", "Ecuador", "Paraguay", "Perú", "Uruguay"),
  lat = c(-34.61, -14.23, -33.45, 4.61, -0.18, -25.30, -9.19, -34.90),
  lng = c(-58.38, -51.92, -70.65, -74.08, -78.47, -57.63, -77.03, -56.19))

poligonos <- st_read("C:/Users/adria/OneDrive/Documentos/udesa/wb_countries_admin0_10m")

normalizar_nombre_pais <- function(pais) {
  pais %>%
    str_to_lower() %>%  # Convertir a minúsculas
    str_trim() %>%  # Eliminar espacios al inicio y al final
    str_replace_all("[áéíóú]", function(x) {  # Reemplazar tildes
      switch(x,
             "á" = "a",
             "é" = "e",
             "í" = "i",
             "ó" = "o",
             "ú" = "u")
    })
}

ui <- dashboardPage(
  title = "Desigualdad", 
  skin = "blue",
  
  dashboardHeader(title = "Desigualdad"),
  
  dashboardSidebar(
    sidebarMenu(
      menuItem("Visualizaciones", tabName = "mapa_tab", icon = icon("globe-americas"))  # Solo una pestaña
    ),
    selectInput("paises_seleccionados", 
                label = "Seleccionar país(es)", 
                choices = paises, 
                selected = paises[1], 
                multiple = TRUE),
    sliderInput("rng", "Años", value = c(1995, 2021), min = 1995, max = 2021),
    selectInput("variable_x", 
                label = "Seleccionar Variables X:", 
                choices = variables_x, 
                selected = variables_x[1],
                multiple = TRUE),
    selectInput("boxplot_var", "Variable para Boxplot:", 
                choices = variables_x, selected = variables_x[1])
  ),
  
  dashboardBody(
    tabItems(
      tabItem(tabName = "mapa_tab",  
              fluidRow(
                column(width = 6,
                       box(title = "Mapa de América Latina", width = NULL,
                           leafletOutput("mapa", height = 400))),
                column(width = 6,
                       box(title = "Boxplot Comparativo", width = NULL,
                           plotOutput("boxplot", height = 400)))         
              ),
              fluidRow(
                column(width = 12,
                       box(title = "Gráfico de Brecha vs Variable X", width = NULL,
                           plotOutput("grafico_brecha_x", height = 300)))
              )
      )
    )
  )
)

server <- function(input, output) {
  
  datos_normalizados <- reactive({
    datos %>%
      mutate(Pais = case_when(
        Pais == "Peru" ~ "Perú",
        TRUE ~ Pais
      ))
  })
  
  colores_paises <- reactive({
    paises_seleccionados <- input$paises_seleccionados
    colores <- colorFactor(palette = "Set3", domain = paises_seleccionados)  
    colores
  })
  
  datos_filtrados <- reactive({
    datos %>%
      filter(Pais %in% input$paises_seleccionados & 
               Año >= input$rng[1] & Año <= input$rng[2])
  })
  
  poligonos_filtrados <- reactive({
    poligonos %>%
      filter(NAME_ES %in% input$paises_seleccionados)  
  })
  
  output$mapa <- renderLeaflet({
    leaflet() %>%
      addTiles() %>%
      setView(lng = -60.00, lat = -15.00, zoom = 3) %>%
      
      addPolygons(data = poligonos,
                  color = "darkgrey",
                  fillColor = "lightgrey",
                  fillOpacity = 0.2,
                  weight = 1,
                  popup = ~NAME_ES) %>%
      
      addPolygons(data = poligonos_filtrados(),
                  color = ~colores_paises()(NAME_ES),  
                  fillColor = ~colores_paises()(NAME_ES),  
                  fillOpacity = 0.7,
                  weight = 2,
                  popup = ~NAME_ES)
  })
  
  output$grafico_brecha_x <- renderPlot({
    req(input$variable_x)
    
    datos_plot <- datos_filtrados() %>%
      select(Pais, Año, Brecha, all_of(input$variable_x))
    
    datos_plot_long <- datos_plot %>%
      pivot_longer(cols = all_of(input$variable_x), names_to = "Variable_X", values_to = "Valor_X")
    
    ggplot(datos_plot_long, aes(x = Valor_X, y = Brecha, color = Pais)) +
      geom_point() +
      geom_smooth(method = "lm", se = FALSE) +
      facet_wrap(~Variable_X, scales = "free_x") +
      scale_color_manual(values = colores_paises()(input$paises_seleccionados)) +  
      labs(x = "Variables X", y = "Brecha", color = "País") +
      theme_minimal() +
      theme(legend.position = "bottom")
  })
  
  output$boxplot <- renderPlot({
    req(input$boxplot_var)
    
    ggplot(datos_filtrados(), aes(x = Pais, y = .data[[input$boxplot_var]], fill = Pais)) +
      geom_boxplot() +
      scale_fill_manual(values = colores_paises()(input$paises_seleccionados)) +  
      labs(title = paste("Comparación de", input$boxplot_var, "entre países"),
           x = "País",
           y = input$boxplot_var) +
      theme_minimal() +
      theme(legend.position = "none")
  })
}

shinyApp(ui, server)
